using Balivo.SendInBlue;
using Dapper;
using Datalayer.Dapper;
using Datalayer.Services;
using DataModels.Entity;
using DataModels.Model;
using Email_Integration.BusinessLayer;
using Email_Integration.Services;
using Nest;
using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace Email_Integration.DataLayer
{
    public class OtpService : DapperBuilderBase<OtpModel>
    {
        private readonly EmailService _emailService;
        private readonly UsersService _usersService;
       

        public OtpService()
        {
           
            SaveMapper = new Dictionary<string, string>
            {
               // fill mapper			
               {"@Email", "Email"},
               {"@Otp", "Otp"},
               {"@SendTime", "SendTime"}
            };
        }
       
        public async Task SendOtp(string email, Users loginUser)
        {
            // generating otp 
            // var otp = _emailService.GenerateRandomOtp();
            var otp = 123232;
            //Users loginUser = new Users();
          await   loginUser = _usersService.GetByEmailID(email);
           

            // saving otp details 
          await  Save(new OtpModel { Email = email, Otp = otp, SendTime = DateTime.UtcNow },loginUser);

            // Building Email to send otp
            var emailModel = new Email
            {
                Subject = "Otp Verification",
                Body = $"Your Otp for Reset password link is {otp}. Please Dont Share it with anyone",
                SentTo = email
            };
            //sending email 
            await _emailService.SendEmail(emailModel, loginUser);

           
        }
        public ResponseModel ValidateOtp(ValidateOtp otpModel)
        {
            var procName = "prValidateOtp";
            var param = new DynamicParameters();
            param.Add("@Email", otpModel.Email);
            param.Add("@Otp", otpModel.Otp);
            return ExecuteStoredProcedure(procName, param);
        }

    }
}
